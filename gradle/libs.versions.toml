[versions]
adventure = "4.10.1"
kotlin = "1.6.20"
serialization = "1.3.2"
exposed = "0.38.1"
ktor = "2.0.0-beta-1"
koin = "3.1.5"
cloud = "1.6.2"
sentry = "6.0.0-alpha.4"
minix = "2.6.2"
configurate = "4.1.2"

[libraries]
adventure-api = { module = "net.kyori:adventure-api", version.ref = "adventure" }
adventure-kotlin = { module = "net.kyori:adventure-extra-kotlin", version.ref = "adventure" }
adventure-minimessage = { module = "net.kyori:adventure-text-minimessage", version.ref = "adventure" }
adventure-configurate = { module = "net.kyori:adventure-serializer-configurate4", version.ref = "adventure" }

adventure-platform-bukkit = "net.kyori:adventure-platform-bukkit:4.1.0"

configurate = { module = "org.spongepowered:configurate-core", version.ref = "configurate" }
configurate-gson = { module = "org.spongepowered:configurate-gson", version.ref = "configurate" }
configurate-hocon = { module = "org.spongepowered:configurate-hocon", version.ref = "configurate" }
configurate-jackson = { module = "org.spongepowered:configurate-jackson", version.ref = "configurate" }
configurate-xml = { module = "org.spongepowered:configurate-xml", version.ref = "configurate" }
configurate-yaml = { module = "org.spongepowered:configurate-yaml", version.ref = "configurate" }
configurate-extra-kotlin = { module = "org.spongepowered:configurate-extra-kotlin", version.ref = "configurate" }
configurate-extra-guice = { module = "org.spongepowered:configurate-extra-guice", version.ref = "configurate" }

cloud-core = { module = "cloud.commandframework:cloud-core", version.ref = "cloud" }
cloud-tasks = { module = "cloud.commandframework:cloud-tasks", version.ref = "cloud" }
cloud-annotations = { module = "cloud.commandframework:cloud-annotations", version.ref = "cloud" }

cloud-kotlin-coroutines = { module = "cloud.commandframework:cloud-kotlin-coroutines", version.ref = "cloud" }
cloud-kotlin-coroutinesAnnotations = { module = "cloud.commandframework:cloud-kotlin-coroutines-annotations", version.ref = "cloud" }
cloud-kotlin-extensions = { module = "cloud.commandframework:cloud-kotlin-extensions", version.ref = "cloud" }

cloud-minecraft-brigadier = { module = "cloud.commandframework:cloud-brigadier", version.ref = "cloud" }
cloud-minecraft-bukkit = { module = "cloud.commandframework:cloud-bukkit", version.ref = "cloud" }
cloud-minecraft-bungee = { module = "cloud.commandframework:cloud-bungee", version.ref = "cloud" }
cloud-minecraft-cloudburst = { module = "cloud.commandframework:cloud-cloudburst", version.ref = "cloud" }
cloud-minecraft-fabric = { module = "cloud.commandframework:cloud-fabric", version.ref = "cloud" }
cloud-minecraft-extras = { module = "cloud.commandframework:cloud-minecraft-extras", version.ref = "cloud" }
cloud-minecraft-paper = { module = "cloud.commandframework:cloud-paper", version.ref = "cloud" }
cloud-minecraft-sponge7 = { module = "cloud.commandframework:cloud-sponge7", version.ref = "cloud" }
cloud-minecraft-velocity = { module = "cloud.commandframework:cloud-velocity", version.ref = "cloud" }

minecraft-minix = { module = "dev.racci:Minix", version.ref = "minix" }
minecraft-minix-core = { module = "dev.racci:Minix-Core", version.ref = "minix" }
minecraft-authLib = "com.mojang:authlib:2.3.31"
minecraft-commandAPI = "dev.jorel.CommandAPI:commandapi-shade:6.5.4"
minecraft-inventoryFramework = "com.github.stefvanschie.inventoryframework:IF:0.10.5"
minecraft-bstats = "org.bstats:bstats-bukkit:3.0.0"

minecraft-api-floodgate = "org.geysermc.floodgate:api:2.1.1-SNAPSHOT"
minecraft-api-protoclLib = "com.comphenix.protocol:ProtocolLib:4.8.0"
minecraft-api-placeholderAPI = "me.clip:placeholderapi:2.11.1"
minecraft-api-LandsAPI = "com.github.angeschossen:LandsAPI:6.0.2"
minecraft-api-eco = "com.willfp:eco:6.31.1"
minecraft-api-ecoEnchants = "com.willfp:EcoEnchants:8.21.0"

kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

kotlinx-coroutines = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:1.6.1"
kotlinx-dateTime = "org.jetbrains.kotlinx:kotlinx-datetime-jvm:0.3.2"
kotlinx-immutableCollections = "org.jetbrains.kotlinx:kotlinx-collections-immutable-jvm:0.3.5"
kotlinx-atomicfu = "org.jetbrains.kotlinx:atomicfu-jvm:0.17.1"

kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core-jvm", version.ref = "serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json-jvm", version.ref = "serialization" }
kotlinx-serialization-cbor = { module = "org.jetbrains.kotlinx:kotlinx-serialization-cbor-jvm", version.ref = "serialization" }
kotlinx-serialization-hocon = { module = "org.jetbrains.kotlinx:kotlinx-serialization-hocon", version.ref = "serialization" }
kotlinx-serialization-protobuf = { module = "org.jetbrains.kotlinx:kotlinx-serialization-protobuf-jvm", version.ref = "serialization" }
kotlinx-serialization-properties = { module = "org.jetbrains.kotlinx:kotlinx-serialization-properties-jvm", version.ref = "serialization" }
kotlinx-serialization-kaml = "com.charleskorn.kaml:kaml-jvm:0.43.0"

exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-dateTime = { module = "org.jetbrains.exposed:exposed-kotlin-datetime", version.ref = "exposed" }

hikariCP = "com.zaxxer:HikariCP:5.0.1"
kotlin-statistics = "org.nield:kotlin-statistics:1.2.1"
valiktor = "org.valiktor:valiktor-core:0.12.0"
mordant = "com.github.ajalt.mordant:mordant-jvm:2.0.0-beta5"
caffeine = "com.github.ben-manes.caffeine:caffeine:3.0.6"
reflections = "org.reflections:reflections:0.10.2"

koin-core = { module = "io.insert-koin:koin-core-jvm", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
koin-test-junit5 = { module = "io.insert-koin:koin-test-junit5", version.ref = "koin" }
koin-ktor = { module = "io.insert-koin:koin-ktor", version.ref = "koin" }

logging-slf4JAPI = "org.slf4j:slf4j-api:2.0.0-alpha7"
logging-kotlinLogging = "io.github.microutils:kotlin-logging-jvm:2.1.21"

sentry-core = { module = "io.sentry:sentry", version.ref = "sentry" }
sentry-kotlin = { module = "io.sentry:sentry-kotlin-extensions", version.ref = "sentry" }

testing-junit5 = "org.junit.jupiter:junit-jupiter:5.8.2"
testing-strikt = "io.strikt:strikt-core:0.34.1"

ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio-jvm", version.ref = "ktor" }
ktor-server-jetty = { module = "io.ktor:ktor-server-jetty-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-server-testHost = { module = "io.ktor:ktor-server-test-host-jvm", version.ref = "ktor" }
ktor-server-tests = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktor" }

ktor-server-plugins-auth = { module = "io.ktor:ktor-server-auth-jvm", version.ref = "ktor" }
ktor-server-plugins-websockets = { module = "io.ktor:ktor-server-websockets-jvm", version.ref = "ktor" }
ktor-server-plugins-sessions = { module = "io.ktor:ktor-server-sessions-jvm", version.ref = "ktor" }
ktor-server-plugins-defaultHeaders = { module = "io.ktor:ktor-server-default-headers-jvm", version.ref = "ktor" }
ktor-server-plugins-callLogging = { module = "io.ktor:ktor-server-call-logging-jvm", version.ref = "ktor" }
ktor-server-plugins-locations = { module = "io.ktor:ktor-server-locations-jvm", version.ref = "ktor" }
ktor-server-plugins-contentNegotiation = { module = "io.ktor:ktor-server-content-negotiation-jvm", version.ref = "ktor" }

ktor-client-core = { module = "io.ktor:ktor-client-core-jvm", version.ref = "ktor" }
ktor-client-apache = { module = "io.ktor:ktor-client-apache-jvm", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio-jvm", version.ref = "ktor" }
ktor-client-java = { module = "io.ktor:ktor-client-java-jvm", version.ref = "ktor" }
ktor-client-jetty = { module = "io.ktor:ktor-client-jetty-jvm", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp-jvm", version.ref = "ktor" }
ktor-client-tests = { module = "io.ktor:ktor-client-tests-jvm", version.ref = "ktor" }

ktor-client-plugins-auth = { module = "io.ktor:ktor-client-auth-jvm", version.ref = "ktor" }
ktor-client-plugins-encoding = { module = "io.ktor:ktor-client-encoding-jvm", version.ref = "ktor" }
ktor-client-plugins-gson = { module = "io.ktor:ktor-client-gson-jvm", version.ref = "ktor" }
ktor-client-plugins-serialization = { module = "io.ktor:ktor-client-serialization-jvm", version.ref = "ktor" }
ktor-client-plugins-logging = { module = "io.ktor:ktor-client-logging-jvm", version.ref = "ktor" }
ktor-client-plugins-websockets = { module = "io.ktor:ktor-client-websockets-jvm", version.ref = "ktor" }

[bundles]
common = [
    "koin-core",
    "koin-ktor",
    "ktor-server-core",
    "ktor-server-cio",
    "ktor-client-core",
    "ktor-client-cio",
    "sentry-core",
    "sentry-kotlin",
    "caffeine"
]
testing = [
    "kotlin-test",
    "testing-junit5",
    "testing-strikt",
    "koin-test-junit5",
    "ktor-server-tests",
    "ktor-server-testHost",
    "ktor-client-tests",
    "ktor-client-mock"
]
kotlin = ["kotlin-stdlib", "kotlin-reflect"]
kotlinx = ["kotlinx-coroutines", "kotlinx-dateTime", "kotlinx-immutableCollections", "kotlinx-atomicfu"]
kyori = ["adventure-api", "adventure-kotlin", "adventure-minimessage"]
cloud = ["cloud-core", "cloud-tasks", "cloud-annotations"]
cloud-kotlin = ["cloud-kotlin-coroutines", "cloud-kotlin-coroutinesAnnotations", "cloud-kotlin-extensions"]
exposed = ["exposed-core", "exposed-dao", "exposed-jdbc", "exposed-dateTime", "hikariCP"]