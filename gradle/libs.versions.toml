[versions]
minecraft = "1.19.4-R0.1-SNAPSHOT"
serialization = "1.5.1"
exposed = "0.42.0"
ktor = "2.3.4"
cloud = "1.8.4"
sentry = "6.29.0"
minix = "4.3.14"
configurate = "4.1.2"
pluginYML = "0.6.0"
shadow = "8.1.1"
paperweight = "1.5.5"
interfaces = "1.0.0-SNAPSHOT"
arrow = "1.2.1"
arrow-analysis = "2.0.2"
bstats = "3.0.2"
ksp = "1.9.0-1.0.13"
slimjar = "1.6.1"
minotaur = "2.8.4"
strikt = "0.34.1"

eco = "6.48.2"
eco-bosses = "8.113.0"
eco-enchants = "9.15.0"
eco-libreforge = "3.127.0"

adventure = "4.14.0"
adventure-platform = "4.3.0"

koin = "3.5.0"
koin-ktor = "3.4.3"
koin-annotations = "1.3.0"

kotlin = "1.9.10"
kotlin-dsl = "4.1.0"
kotlin-plugin-dokka = "1.9.0"
kotlin-plugin-ktlint = "11.5.0"
kotlin-plugin-binaryValidator = "0.13.2"

kotest = "5.7.2"
kotest-ktor = "2.0.0"
kotest-koin = "1.2.0"
kotest-arrow = "1.3.3"

gradle-publish = "1.2.1"
gradle-license = "0.16.1"

[libraries]
adventure-api = { module = "net.kyori:adventure-api", version.ref = "adventure" }
adventure-kotlin = { module = "net.kyori:adventure-extra-kotlin", version.ref = "adventure" }
adventure-minimessage = { module = "net.kyori:adventure-text-minimessage", version.ref = "adventure" }
adventure-configurate = { module = "net.kyori:adventure-serializer-configurate4", version.ref = "adventure" }
adventure-platform-bukkit = { module = "net.kyori:adventure-platform-bukkit", version.ref = "adventure-platform" }

arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
arrow-optics = { module = "io.arrow-kt:arrow-optics", version.ref = "arrow" }
arrow-optics-reflect = { module = "io.arrow-kt:arrow-optics-reflect", version.ref = "arrow" }
arrow-optics-ksp = { module = "io.arrow-kt:arrow-optics-ksp-plugin", version.ref = "arrow" }
arrow-fx-coroutines = { module = "io.arrow-kt:arrow-fx-coroutines", version.ref = "arrow" }
arrow-fx-stm = { module = "io.arrow-kt:arrow-fx-stm", version.ref = "arrow" }
arrow-laws = { module = "io.arrow-kt:arrow-analysis-laws", version.ref = "arrow-analysis" }

configurate = { module = "org.spongepowered:configurate-core", version.ref = "configurate" }
configurate-gson = { module = "org.spongepowered:configurate-gson", version.ref = "configurate" }
configurate-hocon = { module = "org.spongepowered:configurate-hocon", version.ref = "configurate" }
configurate-jackson = { module = "org.spongepowered:configurate-jackson", version.ref = "configurate" }
configurate-xml = { module = "org.spongepowered:configurate-xml", version.ref = "configurate" }
configurate-yaml = { module = "org.spongepowered:configurate-yaml", version.ref = "configurate" }
configurate-extra-kotlin = { module = "org.spongepowered:configurate-extra-kotlin", version.ref = "configurate" }
configurate-extra-guice = { module = "org.spongepowered:configurate-extra-guice", version.ref = "configurate" }

cloud-core = { module = "cloud.commandframework:cloud-core", version.ref = "cloud" }
cloud-tasks = { module = "cloud.commandframework:cloud-tasks", version.ref = "cloud" }
cloud-annotations = { module = "cloud.commandframework:cloud-annotations", version.ref = "cloud" }

cloud-kotlin-coroutines = { module = "cloud.commandframework:cloud-kotlin-coroutines", version.ref = "cloud" }
cloud-kotlin-coroutinesAnnotations = { module = "cloud.commandframework:cloud-kotlin-coroutines-annotations", version.ref = "cloud" }
cloud-kotlin-extensions = { module = "cloud.commandframework:cloud-kotlin-extensions", version.ref = "cloud" }

cloud-minecraft-brigadier = { module = "cloud.commandframework:cloud-brigadier", version.ref = "cloud" }
cloud-minecraft-bukkit = { module = "cloud.commandframework:cloud-bukkit", version.ref = "cloud" }
cloud-minecraft-bungee = { module = "cloud.commandframework:cloud-bungee", version.ref = "cloud" }
cloud-minecraft-cloudburst = { module = "cloud.commandframework:cloud-cloudburst", version.ref = "cloud" }
cloud-minecraft-fabric = { module = "cloud.commandframework:cloud-fabric", version.ref = "cloud" }
cloud-minecraft-extras = { module = "cloud.commandframework:cloud-minecraft-extras", version.ref = "cloud" }
cloud-minecraft-paper = { module = "cloud.commandframework:cloud-paper", version.ref = "cloud" }
cloud-minecraft-sponge7 = { module = "cloud.commandframework:cloud-sponge7", version.ref = "cloud" }
cloud-minecraft-velocity = { module = "cloud.commandframework:cloud-velocity", version.ref = "cloud" }

minecraft-minix = { module = "dev.racci:Minix", version.ref = "minix" }
minecraft-minix-core = { module = "dev.racci:Minix-Core", version.ref = "minix" }
minecraft-authLib = "com.mojang:authlib:2.3.31"
minecraft-commandAPI = "dev.jorel:commandapi-shade:8.8.0"
minecraft-inventoryFramework = "com.github.stefvanschie.inventoryframework:IF:0.10.11"
minecraft-particles = "xyz.xenondevs:particle:1.8.4"
minecraft-bstats-base = { module = "org.bstats:bstats-base", version.ref = "bstats" }
minecraft-bstats-bukkit = { module = "org.bstats:bstats-bukkit", version.ref = "bstats" }
minecraft-bstats-velocity = { module = "org.bstats:bstats-velocity", version.ref = "bstats" }
minecraft-interfaces-paper = { module = "org.incendo.interfaces:interfaces-paper", version.ref = "interfaces" }
minecraft-interfaces-kotlin = { module = "org.incendo.interfaces:interfaces-kotlin", version.ref = "interfaces" }

minecraft-api-floodgate = "org.geysermc.floodgate:api:2.1.1-SNAPSHOT"
minecraft-api-protoclLib = "com.github.dmulloy2:ProtocolLib:4.8.0"
minecraft-api-placeholderAPI = "me.clip:placeholderapi:2.11.2"
minecraft-api-LandsAPI = "com.github.angeschossen:LandsAPI:6.26.18"

minecraft-api-eco = { module = "com.willfp:eco", version.ref = "eco" }
minecraft-api-eco-bosses = { module = "com.willfp:EcoBosses", version.ref = "eco-bosses" }
minecraft-api-eco-enchants = { module = "com.willfp:EcoEnchants", version.ref = "eco-enchants" }
minecraft-api-eco-libreforge = { module = "com.willfp:libreforge", version.ref = "eco-libreforge" }

minecraft-api-luckperms = "net.luckperms:api:5.4"
minecraft-api-lightAPI = "com.github.BeYkeRYkt.LightAPI:lightapi-bukkit-common:5.3.0-Bukkit"
minecraft-api-libsDisguises = "LibsDisguises:LibsDisguises:10.0.31"
minecraft-api-serverutils = "net.frankheijden.serverutils:ServerUtils:3.5.3"
minecraft-api-itemsAdder = "com.github.LoneDev6:api-itemsadder:3.2.5"

kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

kotlinx-coroutines = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:1.7.3"
kotlinx-dateTime = "org.jetbrains.kotlinx:kotlinx-datetime-jvm:0.4.1"
kotlinx-immutableCollections = "org.jetbrains.kotlinx:kotlinx-collections-immutable-jvm:0.3.5"
kotlinx-atomicfu = "org.jetbrains.kotlinx:atomicfu-jvm:0.22.0"

kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core-jvm", version.ref = "serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json-jvm", version.ref = "serialization" }
kotlinx-serialization-cbor = { module = "org.jetbrains.kotlinx:kotlinx-serialization-cbor-jvm", version.ref = "serialization" }
kotlinx-serialization-hocon = { module = "org.jetbrains.kotlinx:kotlinx-serialization-hocon", version.ref = "serialization" }
kotlinx-serialization-protobuf = { module = "org.jetbrains.kotlinx:kotlinx-serialization-protobuf-jvm", version.ref = "serialization" }
kotlinx-serialization-properties = { module = "org.jetbrains.kotlinx:kotlinx-serialization-properties-jvm", version.ref = "serialization" }
kotlinx-serialization-kaml = "com.charleskorn.kaml:kaml-jvm:0.55.0"

exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-dateTime = { module = "org.jetbrains.exposed:exposed-kotlin-datetime", version.ref = "exposed" }

# TODO: Sort these
hikariCP = "com.zaxxer:HikariCP:5.0.1"
h2 = "com.h2database:h2:2.2.224"
kotlin-statistics = "org.nield:kotlin-statistics:1.2.1"
valiktor = "org.valiktor:valiktor-core:0.12.0"
mordant = "com.github.ajalt.mordant:mordant-jvm:2.1.0"
caffeine = "com.github.ben-manes.caffeine:caffeine:3.1.8"
reflections = "org.reflections:reflections:0.10.2"
classgraph = "io.github.classgraph:classgraph:4.8.162"
slimjar = { module = "dev.racci.slimjar:slimjar", version.ref = "slimjar" }
mariadb = "org.mariadb.jdbc:mariadb-java-client:3.2.0"
toolfactory = "io.github.toolfactory:jvm-driver:9.4.3"
apiguardian = "org.apiguardian:apiguardian-api:1.1.2"
aedile = "com.sksamuel.aedile:aedile-core:1.2.4"

koin-core = { module = "io.insert-koin:koin-core-jvm", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
koin-test-junit5 = { module = "io.insert-koin:koin-test-junit5", version.ref = "koin" }
koin-ktor = { module = "io.insert-koin:koin-ktor", version.ref = "koin-ktor" }
koin-annotations = { module = "io.insert-koin:koin-annotations", version.ref = "koin-annotations" }
koin-ksp = { module = "io.insert-koin:koin-ksp-compiler", version.ref = "koin-annotations" }

logging-slf4JAPI = "org.slf4j:slf4j-api:2.0.9"

sentry-core = { module = "io.sentry:sentry", version.ref = "sentry" }
sentry-kotlin = { module = "io.sentry:sentry-kotlin-extensions", version.ref = "sentry" }

testing-junit5 = "org.junit.jupiter:junit-jupiter:5.10.0"
testing-mockK = "io.mockk:mockk:1.13.7"

testing-strikt = { module = "io.strikt:strikt-core", version.ref = "strikt" }
testing-strikt-arrow = { module = "io.strikt:strikt-arrow", version.ref = "strikt" }
testing-strikt-mockk = { module = "io.strikt:strikt-mockk", version.ref = "strikt" }

testing-kotest-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
testing-kotest-assertions = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
testing-kotest-properties = { module = "io.kotest:kotest-property", version.ref = "kotest" }
testing-kotest-ktor = { module = "io.kotest.extensions:kotest-assertions-ktor", version.ref = "kotest-ktor" }
testing-kotest-koin = { module = "io.kotest.extensions:kotest-extensions-koin", version.ref = "kotest-koin" }
testing-kotest-arrow = { module = "io.kotest.extensions:kotest-assertions-arrow", version.ref = "kotest-arrow" }
testing-kotest-arrow-coroutines = { module = "io.kotest.extensions:kotest-assertions-arrow-fx-coroutines", version.ref = "kotest-arrow" }

ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio-jvm", version.ref = "ktor" }
ktor-server-jetty = { module = "io.ktor:ktor-server-jetty-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-server-testHost = { module = "io.ktor:ktor-server-test-host-jvm", version.ref = "ktor" }
ktor-server-tests = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktor" }

ktor-server-plugins-auth = { module = "io.ktor:ktor-server-auth-jvm", version.ref = "ktor" }
ktor-server-plugins-websockets = { module = "io.ktor:ktor-server-websockets-jvm", version.ref = "ktor" }
ktor-server-plugins-sessions = { module = "io.ktor:ktor-server-sessions-jvm", version.ref = "ktor" }
ktor-server-plugins-defaultHeaders = { module = "io.ktor:ktor-server-default-headers-jvm", version.ref = "ktor" }
ktor-server-plugins-callLogging = { module = "io.ktor:ktor-server-call-logging-jvm", version.ref = "ktor" }
ktor-server-plugins-locations = { module = "io.ktor:ktor-server-locations-jvm", version.ref = "ktor" }
ktor-server-plugins-contentNegotiation = { module = "io.ktor:ktor-server-content-negotiation-jvm", version.ref = "ktor" }

ktor-client-core = { module = "io.ktor:ktor-client-core-jvm", version.ref = "ktor" }
ktor-client-apache = { module = "io.ktor:ktor-client-apache-jvm", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio-jvm", version.ref = "ktor" }
ktor-client-java = { module = "io.ktor:ktor-client-java-jvm", version.ref = "ktor" }
ktor-client-jetty = { module = "io.ktor:ktor-client-jetty-jvm", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp-jvm", version.ref = "ktor" }
ktor-client-tests = { module = "io.ktor:ktor-client-tests-jvm", version.ref = "ktor" }

ktor-client-plugins-auth = { module = "io.ktor:ktor-client-auth-jvm", version.ref = "ktor" }
ktor-client-plugins-encoding = { module = "io.ktor:ktor-client-encoding-jvm", version.ref = "ktor" }
ktor-client-plugins-gson = { module = "io.ktor:ktor-client-gson-jvm", version.ref = "ktor" }
ktor-client-plugins-serialization = { module = "io.ktor:ktor-client-serialization-jvm", version.ref = "ktor" }
ktor-client-plugins-logging = { module = "io.ktor:ktor-client-logging-jvm", version.ref = "ktor" }
ktor-client-plugins-websockets = { module = "io.ktor:ktor-client-websockets-jvm", version.ref = "ktor" }

gradle-shadow = { module = "gradle.plugin.com.github.jengelman.gradle.plugins:shadow", version = "7.0.0" } # For some reason can only resolve up to 7.0.0
gradle-slimjar = { module = "dev.racci.slimjar:dev.racci.slimjar.gradle.plugin", version.ref = "slimjar" }

gradle-kotlin-dsl = { module = "org.gradle.kotlin.kotlin-dsl:org.gradle.kotlin.kotlin-dsl.gradle.plugin", version.ref = "kotlin-dsl" }
gradle-kotlin-jvm = { module = "org.jetbrains.kotlin.jvm:org.jetbrains.kotlin.jvm.gradle.plugin", version.ref = "kotlin" }
gradle-kotlin-mpp = { module = "org.jetbrains.kotlin.multiplatform:org.jetbrains.kotlin.multiplatform.gradle.plugin", version.ref = "kotlin" }
gradle-kotlin-plugin-serialization = { module = "org.jetbrains.kotlin.plugin.serialization:org.jetbrains.kotlin.plugin.serialization.gradle.plugin", version.ref = "kotlin" }
gradle-kotlin-plugin-ktlint = { module = "org.jlleitschuh.gradle:ktlint-gradle", version.ref = "kotlin-plugin-ktlint" }
gradle-kotlin-plugin-dokka = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "kotlin-plugin-dokka" }

gradle-minecraft-pluginYML = { module = "net.minecrell:plugin-yml", version.ref = "pluginYML" }
gradle-minecraft-paperweight = { module = "io.papermc.paperweight.userdev:io.papermc.paperweight.userdev.gradle.plugin", version.ref = "paperweight" }

[plugins]

ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
slimjar = { id = "dev.racci.slimjar", version.ref = "slimjar" }
shadow = { id = "com.github.johnrengelman.shadow", version.ref = "shadow" }
arrow-analysis = { id = "io.arrow-kt.analysis.kotlin", version.ref = "arrow-analysis" }

gradle-publish = { id = "com.gradle.plugin-publish", version.ref = "gradle-publish" }
gradle-license = { id = "com.github.hierynomus.license-base", version.ref = "gradle-license" }

kotlin-dsl = { id = "org.gradle.kotlin.kotlin-dsl", version.ref = "kotlin-dsl" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-mpp = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-plugin-dokka = { id = "org.jetbrains.dokka", version.ref = "kotlin-plugin-dokka" }
kotlin-plugin-ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "kotlin-plugin-ktlint" }
kotlin-plugin-atomicfu = { id = "org.jetbrains.kotlin.plugin.atomicfu", version.ref = "kotlin" }
kotlin-plugin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-plugin-binaryValidator = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version.ref = "kotlin-plugin-binaryValidator" }

minecraft-runPaper = "xyz.jpenilla.run-paper:2.1.0"
minecraft-pluginYML = { id = "net.minecrell.plugin-yml.bukkit", version.ref = "pluginYML" }
minecraft-paperweight = { id = "io.papermc.paperweight.userdev", version.ref = "paperweight" }
minecraft-minotaur = { id = "com.modrinth.minotaur", version.ref = "minotaur" }

[bundles]
common = [
    "koin-core",
    "koin-ktor",
    "ktor-server-core",
    "ktor-server-cio",
    "ktor-client-core",
    "ktor-client-cio",
    "sentry-core",
    "sentry-kotlin",
    "caffeine"
]
testing = [
    "kotlin-test",
    "testing-kotest-junit5",
    "testing-kotest-assertions",
    "testing-kotest-properties",
    "testing-junit5",
    "testing-strikt",
    "testing-mockK",
    "koin-test",
    "koin-test-junit5",
    "ktor-server-tests",
    "ktor-server-testHost",
    "ktor-client-tests",
    "ktor-client-mock"
]
kotlin = ["kotlin-stdlib", "kotlin-reflect"]
kotlinx = ["kotlinx-coroutines", "kotlinx-dateTime", "kotlinx-immutableCollections", "kotlinx-atomicfu"]
kyori = ["adventure-api", "adventure-kotlin", "adventure-minimessage"]
cloud = ["cloud-core", "cloud-tasks", "cloud-annotations"]
cloud-kotlin = ["cloud-kotlin-coroutines", "cloud-kotlin-coroutinesAnnotations", "cloud-kotlin-extensions"]
exposed = ["exposed-core", "exposed-dao", "exposed-jdbc", "exposed-dateTime", "hikariCP"]
